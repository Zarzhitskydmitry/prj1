import modules                                                                     # мы подключили библиотку с нашими функциями
from modulehero import *                                                           # мы импортировали модуль с нашим классом героя
# Еще можно добавить модуль с помощью (from modules import * или название класса), тогда не нужно будет прописывать modules в начале функции и просто написать название функции
import os
import sys
print("=========================================================================================\nРабота с модулями\n=========================================================================================\n")
# смотри файл modules
# Для присоедниения модуля нужно сделать Import и название файла или библиотеки в начале кода чтобы использовать его в проекте скопируем прошлый урок в отдельный файл и зададим ему имя modules
# Важно название модулей рекомендуется называть с маленькой буквы без "-" и "_"
for i in range(4, 11):                                                              # Вызовем цикл факториалов
    print("Factorial chisla "+ str(i) + "! = "+ str(modules.factorial(i)))          # цикл промежутка числа i от 4 до 20, посчитать факториал этого числа i
print("===============================")
modules.awards("Za stalina", "Volodya", "nikita", "slava")
print("===============================")

# смотри файл modulehero (работа с классами)
myhero1 = Hero("Jenson", 9, "Ork")
myhero2 = Hero("Quark", 5, "human")
mysuperhero = SuperHero("Googol", 24, "elf", 9)
print("===============================")
myhero1.show_hero()
myhero1.level_up()
print("===============================")
myhero2.show_hero()
myhero2.move()
myhero2.level_up()
myhero2.set_health(50)                                                              # изменим здоровье герою с помощью функции
myhero2.level_up()
print("===============================")
mysuperhero.show_hero()
mysuperhero.use_magic()
mysuperhero.magic = 10                                                              # попробуем насильно изменить количество магии, это не получится из-за инкапсуляции 
mysuperhero.show_hero()
print("=========================================================================================\nEND\n=========================================================================================\n")


print("=========================================================================================\nРабота с файлами\n=========================================================================================\n")
inputfile01 = 'files/list-pers.txt'                                                  # Желательно не писать полное расположение файла, а держать сам файл внутри проекта и указать его название
# ../"namefile" использовать если файлы выше директории и "namedirectory"/"namefile" если он в папке ниже, если рядом с проектом, то просто "namefile"
myfile01 = open(inputfile01, mode='r', encoding='utf-8' )                            # создаем переменную open(открывает файл), mode(режим работы с файлом, read, write, add, r+ читать и писать)       
# encoding - в какой кодировке ваш файл
#print(myfile01.read())
for num, line01 in enumerate(myfile01, 1):                                           # Пронумеруем каждую строку через num и enumerate и название файла и поставив 1 после название, нумерация пойдет с 1
    # также можно вывести только определенные значения через if "Steel" in line01
    print(str(num) + ". Hello " + line01.strip())
print("===============================")
#for line01 in myfile01:
#    print("Hello " + line01.strip())

# Теперь попробуйем вывести нам нужную информацию в отдельный файл
inputfile02 = 'files/list-pass.txt'
outputfile01 = 'files/pass.log'
myfile02 = open(inputfile02, mode='r', encoding='utf-8' )
myfile03 = open(outputfile01, mode='w', encoding='utf-8' )                          # (mode='w') перезаписывает файл, для добавления нужно использовать (mode='a')
mypassw = '1234'                                                                    # Вводим переменную со значением которое может содержать файл
for num, line02 in enumerate(myfile02, 1):                                           
    if mypassw in line02:
        print(str(num) + ". Is my pass " + line02.strip())
        myfile03.write("My password " + str(line02))                                # Давайте запишем все в файл 'files/pass.log' все что найдет 
myfile01.close()                                                                    # Так же не забываем закрывать файлы
myfile02.close()
myfile03.close()

outputfile02 = 'list-myprj.log'                                                     # Давайте посмотрим что находится в папке с нашим проектом с помощью библиотеки os, cделаем импорт import os
myfile04 = open(outputfile02, mode='w', encoding='utf-8')                           # для вывода информации возьмем функции из библиотеки path - место положение, subdir - вложеные каталоги и files - файлы.
for path, subdirs, files in os.walk('./'):                                          # Вызываем поиск в os.walk с ключами './' - где искать
   for num, filename in enumerate(files, 1):                                        # так же пронумеруем сколько файлов в папках
     f = os.path.join(path, filename)                                               # создаем переменную, которая включает в себя, 'namedir/namefile'
     myfile04.write(str(num) + ". "+ str(f) + os.linesep)                           # os.linesep - используется для резделения строк. str(f) - выводит название 'namedir/namefile'
print("=========================================================================================\nEND\n=========================================================================================\n")

print("=========================================================================================\nРабота с перехватом ошибок\n=========================================================================================\n")
inputfile03 = 'files/list-new.txt'                                                  # давайте попробуем открыть не существующий файл
try:                                                                                # try - сделать попытку чего-либо, если в коде будет допущена ошибка то он перейдет в except
    print("Probuem otkryt file")    
    myfile05 = open(inputfile03, mode='r', encoding='utf-8')
except Exception:                                                                   # except - перехватывает ошибку Exception - системная ошибку

    print('File not found')                                                         # при возникновении ошибка он печатает что не найден файл
# так же если будет найдена ошибка код можно завершить для продолжения с помощью библиотеки sys, давайте ее подключим import sys
#   sys.exit() - это команда завершит выполнение программы 
    print(sys.exc_info()[1])                                                        # можем вывести название ошибки и ее определенный вид указав sys.exc_info() и [1] номер
else:
    print("File is found")
    print(myfile05.read())
#a = 10  - это часть кода не начнется
#b = 16
#print(a+b) 
print("=========================================================================================\nEND\n=========================================================================================\n")
